package cn.yiueil.meeting.entity;

import java.util.ArrayList;
import java.util.List;

public class RemindExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public RemindExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRofIsNull() {
            addCriterion("rof is null");
            return (Criteria) this;
        }

        public Criteria andRofIsNotNull() {
            addCriterion("rof is not null");
            return (Criteria) this;
        }

        public Criteria andRofEqualTo(Byte value) {
            addCriterion("rof =", value, "rof");
            return (Criteria) this;
        }

        public Criteria andRofNotEqualTo(Byte value) {
            addCriterion("rof <>", value, "rof");
            return (Criteria) this;
        }

        public Criteria andRofGreaterThan(Byte value) {
            addCriterion("rof >", value, "rof");
            return (Criteria) this;
        }

        public Criteria andRofGreaterThanOrEqualTo(Byte value) {
            addCriterion("rof >=", value, "rof");
            return (Criteria) this;
        }

        public Criteria andRofLessThan(Byte value) {
            addCriterion("rof <", value, "rof");
            return (Criteria) this;
        }

        public Criteria andRofLessThanOrEqualTo(Byte value) {
            addCriterion("rof <=", value, "rof");
            return (Criteria) this;
        }

        public Criteria andRofIn(List<Byte> values) {
            addCriterion("rof in", values, "rof");
            return (Criteria) this;
        }

        public Criteria andRofNotIn(List<Byte> values) {
            addCriterion("rof not in", values, "rof");
            return (Criteria) this;
        }

        public Criteria andRofBetween(Byte value1, Byte value2) {
            addCriterion("rof between", value1, value2, "rof");
            return (Criteria) this;
        }

        public Criteria andRofNotBetween(Byte value1, Byte value2) {
            addCriterion("rof not between", value1, value2, "rof");
            return (Criteria) this;
        }

        public Criteria andRtypeIsNull() {
            addCriterion("rtype is null");
            return (Criteria) this;
        }

        public Criteria andRtypeIsNotNull() {
            addCriterion("rtype is not null");
            return (Criteria) this;
        }

        public Criteria andRtypeEqualTo(Byte value) {
            addCriterion("rtype =", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeNotEqualTo(Byte value) {
            addCriterion("rtype <>", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeGreaterThan(Byte value) {
            addCriterion("rtype >", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("rtype >=", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeLessThan(Byte value) {
            addCriterion("rtype <", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeLessThanOrEqualTo(Byte value) {
            addCriterion("rtype <=", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeIn(List<Byte> values) {
            addCriterion("rtype in", values, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeNotIn(List<Byte> values) {
            addCriterion("rtype not in", values, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeBetween(Byte value1, Byte value2) {
            addCriterion("rtype between", value1, value2, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeNotBetween(Byte value1, Byte value2) {
            addCriterion("rtype not between", value1, value2, "rtype");
            return (Criteria) this;
        }

        public Criteria andRparamIsNull() {
            addCriterion("rparam is null");
            return (Criteria) this;
        }

        public Criteria andRparamIsNotNull() {
            addCriterion("rparam is not null");
            return (Criteria) this;
        }

        public Criteria andRparamEqualTo(Integer value) {
            addCriterion("rparam =", value, "rparam");
            return (Criteria) this;
        }

        public Criteria andRparamNotEqualTo(Integer value) {
            addCriterion("rparam <>", value, "rparam");
            return (Criteria) this;
        }

        public Criteria andRparamGreaterThan(Integer value) {
            addCriterion("rparam >", value, "rparam");
            return (Criteria) this;
        }

        public Criteria andRparamGreaterThanOrEqualTo(Integer value) {
            addCriterion("rparam >=", value, "rparam");
            return (Criteria) this;
        }

        public Criteria andRparamLessThan(Integer value) {
            addCriterion("rparam <", value, "rparam");
            return (Criteria) this;
        }

        public Criteria andRparamLessThanOrEqualTo(Integer value) {
            addCriterion("rparam <=", value, "rparam");
            return (Criteria) this;
        }

        public Criteria andRparamIn(List<Integer> values) {
            addCriterion("rparam in", values, "rparam");
            return (Criteria) this;
        }

        public Criteria andRparamNotIn(List<Integer> values) {
            addCriterion("rparam not in", values, "rparam");
            return (Criteria) this;
        }

        public Criteria andRparamBetween(Integer value1, Integer value2) {
            addCriterion("rparam between", value1, value2, "rparam");
            return (Criteria) this;
        }

        public Criteria andRparamNotBetween(Integer value1, Integer value2) {
            addCriterion("rparam not between", value1, value2, "rparam");
            return (Criteria) this;
        }

        public Criteria andRenableIsNull() {
            addCriterion("renable is null");
            return (Criteria) this;
        }

        public Criteria andRenableIsNotNull() {
            addCriterion("renable is not null");
            return (Criteria) this;
        }

        public Criteria andRenableEqualTo(Boolean value) {
            addCriterion("renable =", value, "renable");
            return (Criteria) this;
        }

        public Criteria andRenableNotEqualTo(Boolean value) {
            addCriterion("renable <>", value, "renable");
            return (Criteria) this;
        }

        public Criteria andRenableGreaterThan(Boolean value) {
            addCriterion("renable >", value, "renable");
            return (Criteria) this;
        }

        public Criteria andRenableGreaterThanOrEqualTo(Boolean value) {
            addCriterion("renable >=", value, "renable");
            return (Criteria) this;
        }

        public Criteria andRenableLessThan(Boolean value) {
            addCriterion("renable <", value, "renable");
            return (Criteria) this;
        }

        public Criteria andRenableLessThanOrEqualTo(Boolean value) {
            addCriterion("renable <=", value, "renable");
            return (Criteria) this;
        }

        public Criteria andRenableIn(List<Boolean> values) {
            addCriterion("renable in", values, "renable");
            return (Criteria) this;
        }

        public Criteria andRenableNotIn(List<Boolean> values) {
            addCriterion("renable not in", values, "renable");
            return (Criteria) this;
        }

        public Criteria andRenableBetween(Boolean value1, Boolean value2) {
            addCriterion("renable between", value1, value2, "renable");
            return (Criteria) this;
        }

        public Criteria andRenableNotBetween(Boolean value1, Boolean value2) {
            addCriterion("renable not between", value1, value2, "renable");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Long value) {
            addCriterion("uid =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Long value) {
            addCriterion("uid <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Long value) {
            addCriterion("uid >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Long value) {
            addCriterion("uid >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Long value) {
            addCriterion("uid <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Long value) {
            addCriterion("uid <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Long> values) {
            addCriterion("uid in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Long> values) {
            addCriterion("uid not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Long value1, Long value2) {
            addCriterion("uid between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Long value1, Long value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_remind
     *
     * @mbg.generated do_not_delete_during_merge Fri Mar 20 21:05:23 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_remind
     *
     * @mbg.generated Fri Mar 20 21:05:23 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}