<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yiueil.meeting.mapper.MeetingUserMapper">
  <resultMap id="BaseResultMap" type="cn.yiueil.meeting.entity.MeetingUser">
    <id column="mid" jdbcType="BIGINT" property="mid" />
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="mrole" jdbcType="VARCHAR" property="mrole" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mid, uid, mrole, status
  </sql>
  <select id="selectByExample" parameterType="cn.yiueil.meeting.entity.MeetingUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_meeting_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.yiueil.meeting.entity.MeetingUserKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_meeting_user
    where mid = #{mid,jdbcType=BIGINT}
      and uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.yiueil.meeting.entity.MeetingUserKey">
    delete from t_meeting_user
    where mid = #{mid,jdbcType=BIGINT}
      and uid = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yiueil.meeting.entity.MeetingUserExample">
    delete from t_meeting_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yiueil.meeting.entity.MeetingUser">
    insert into t_meeting_user (mid, uid, mrole, 
      status)
    values (#{mid,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{mrole,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yiueil.meeting.entity.MeetingUser">
    insert into t_meeting_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        mid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="mrole != null">
        mrole,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        #{mid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="mrole != null">
        #{mrole,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yiueil.meeting.entity.MeetingUserExample" resultType="java.lang.Long">
    select count(*) from t_meeting_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_meeting_user
    <set>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.mrole != null">
        mrole = #{record.mrole,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_meeting_user
    set mid = #{record.mid,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      mrole = #{record.mrole,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yiueil.meeting.entity.MeetingUser">
    update t_meeting_user
    <set>
      <if test="mrole != null">
        mrole = #{mrole,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where mid = #{mid,jdbcType=BIGINT}
      and uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yiueil.meeting.entity.MeetingUser">
    update t_meeting_user
    set mrole = #{mrole,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where mid = #{mid,jdbcType=BIGINT}
      and uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>